{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev/Portfolio/Next.js/my-taskflow/frontend/app/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const { register, isAuthenticated } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      router.push('/');\r\n    }\r\n  }, [isAuthenticated, router]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.username.trim()) {\r\n      newErrors.username = 'Username is required';\r\n    } else if (formData.username.length < 3) {\r\n      newErrors.username = 'Username must be at least 3 characters';\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    } else if (formData.password.length < 6) {\r\n      newErrors.password = 'Password must be at least 6 characters';\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Passwords do not match';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const success = await register(formData.username, formData.email, formData.password);\r\n      if (success) {\r\n        router.push('/login?message=Registration successful! Please log in.');\r\n      }\r\n    } catch (error) {\r\n      setErrors({ general: error instanceof Error ? error.message : 'Registration failed' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        {/* Logo */}\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\r\n            <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        \r\n        <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\r\n          Create your account\r\n        </h2>\r\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n          Or{' '}\r\n          <Link href=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500 transition-colors\">\r\n            sign in to your existing account\r\n          </Link>\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"bg-white py-8 px-4 shadow-sm border border-gray-200 rounded-lg sm:px-10\">\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            {errors.general && (\r\n              <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md text-sm\">\r\n                {errors.general}\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\r\n                Username\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  autoComplete=\"username\"\r\n                  required\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\r\n                    errors.username ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter your username\"\r\n                />\r\n                {errors.username && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.username}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                Email address\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\r\n                    errors.email ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter your email\"\r\n                />\r\n                {errors.email && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  value={formData.password}\r\n                  onChange={handleInputChange}\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\r\n                    errors.password ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Create a password\"\r\n                />\r\n                {errors.password && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleInputChange}\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\r\n                    errors.confirmPassword ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Confirm your password\"\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                {isLoading ? (\r\n                  <div className=\"flex items-center\">\r\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Creating account...\r\n                  </div>\r\n                ) : (\r\n                  'Create account'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"mt-6\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-0 flex items-center\">\r\n                <div className=\"w-full border-t border-gray-300\" />\r\n              </div>\r\n              <div className=\"relative flex justify-center text-sm\">\r\n                <span className=\"px-2 bg-white text-gray-500\">By creating an account, you agree to our</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-center text-xs text-gray-500\">\r\n              <Link href=\"/terms\" className=\"text-blue-600 hover:text-blue-500\">Terms of Service</Link>\r\n              {' '}and{' '}\r\n              <Link href=\"/privacy\" className=\"text-blue-600 hover:text-blue-500\">Privacy Policy</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}