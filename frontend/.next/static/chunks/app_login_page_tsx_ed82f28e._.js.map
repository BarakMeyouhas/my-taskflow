{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev/Portfolio/Next.js/my-taskflow/frontend/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, Suspense } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const { login, isAuthenticated, isLoading: authLoading } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Check for success message from registration\r\n  useEffect(() => {\r\n    const successMessage = searchParams.get('message');\r\n    if (successMessage) {\r\n      setMessage(successMessage);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // Use replace instead of push to avoid adding to history\r\n      router.replace('/');\r\n    }\r\n  }, [isAuthenticated, router]);\r\n\r\n  // Don't render login page if already authenticated or still loading auth\r\n  if (authLoading || isAuthenticated) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.username.trim()) {\r\n      newErrors.username = 'Username is required';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    \r\n             try {\r\n           const success = await login(formData.username, formData.password);\r\n           if (success) {\r\n             // Don't navigate immediately - let the auth state update first\r\n             // The useEffect will handle the redirect when isAuthenticated changes\r\n           }\r\n         } catch (error) {\r\n      setErrors({ general: error instanceof Error ? error.message : 'Login failed' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        {/* Logo */}\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\r\n            <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        \r\n        <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\r\n          Sign in to your account\r\n        </h2>\r\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n          Or{' '}\r\n          <Link href=\"/register\" className=\"font-medium text-blue-600 hover:text-blue-500 transition-colors\">\r\n            create a new account\r\n          </Link>\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"bg-white py-8 px-4 shadow-sm border border-gray-200 rounded-lg sm:px-10\">\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            {message && (\r\n              <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md text-sm\">\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {errors.general && (\r\n              <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md text-sm\">\r\n                {errors.general}\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\r\n                Username\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  autoComplete=\"username\"\r\n                  required\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\r\n                    errors.username ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter your username\"\r\n                />\r\n                {errors.username && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.username}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  required\r\n                  value={formData.password}\r\n                  onChange={handleInputChange}\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${\r\n                    errors.password ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                {errors.password && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  id=\"remember-me\"\r\n                  name=\"remember-me\"\r\n                  type=\"checkbox\"\r\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"text-sm\">\r\n                <Link href=\"/forgot-password\" className=\"font-medium text-blue-600 hover:text-blue-500 transition-colors\">\r\n                  Forgot your password?\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                {isLoading ? (\r\n                  <div className=\"flex items-center\">\r\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Signing in...\r\n                  </div>\r\n                ) : (\r\n                  'Sign in'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"mt-6\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-0 flex items-center\">\r\n                <div className=\"w-full border-t border-gray-300\" />\r\n              </div>\r\n              <div className=\"relative flex justify-center text-sm\">\r\n                <span className=\"px-2 bg-white text-gray-500\">New to TaskFlow?</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-center\">\r\n              <Link \r\n                href=\"/register\" \r\n                className=\"font-medium text-blue-600 hover:text-blue-500 transition-colors\"\r\n              >\r\n                Create an account\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginPage: React.FC = () => {\r\n  return (\r\n    <Suspense fallback={\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    }>\r\n      <LoginForm />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}