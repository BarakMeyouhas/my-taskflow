name: Build and deploy Node.js app to Azure Web App - TaskFlow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== Installing dependencies ==="
          echo "Current directory: %CD%"
          echo "Node version: %NODE_VERSION%"
          echo "npm version:"
          npm --version
          echo "=== Starting npm ci ==="
          npm ci
          echo "=== Dependencies installed successfully ==="
          echo "=== Verifying node_modules ==="
          if exist node_modules (
            echo "✓ node_modules directory exists"
            dir node_modules | findstr "next react"
          ) else (
            echo "✗ node_modules directory missing!"
            exit /b 1
          )

      - name: Build Next.js application
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== BUILD STEP STARTED ==="
          echo "=== Starting Next.js build ==="
          echo "Current directory: %CD%"
          echo "Available scripts in package.json:"
          npm run
          echo "=== Running npm run build ==="
          npm run build
          echo "=== Build completed, exit code: %ERRORLEVEL% ==="
          
          if %ERRORLEVEL% neq 0 (
            echo "ERROR: Build failed with exit code %ERRORLEVEL%"
            echo "=== Checking for build errors ==="
            if exist .next (
              echo "WARNING: .next directory exists despite build failure"
              dir .next
            )
            echo "=== Current directory contents after build failure: ==="
            dir
            exit /b 1
          )
          
          echo "=== Verifying build output ==="
          if not exist .next (
            echo "ERROR: .next directory not found after build"
            echo "=== Current directory contents: ==="
            dir
            echo "=== package.json contents: ==="
            type package.json
            exit /b 1
          )
          
          echo "=== Build successful! .next directory contents: ==="
          dir .next
          echo "=== .next/static contents: ==="
          if exist .next\static (
            dir .next\static
            echo "=== Static files count: ==="
            dir .next\static /b | find /c /v ""
          ) else (
            echo "WARNING: .next/static directory missing!"
          )
          echo "=== .next/server contents: ==="
          if exist .next\server (
            dir .next\server
            echo "=== Server files count: ==="
            dir .next\server /b | find /c /v ""
          ) else (
            echo "WARNING: .next/server directory missing!"
          )

      - name: Clean up for deployment
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== Cleaning up for deployment ==="
          echo "=== Preserving essential files: .next, package.json, server.cjs, web.config, .deployment ==="
          
          echo "=== BEFORE CLEANUP - Current directory contents: ==="
          dir
          echo "=== BEFORE CLEANUP - .next directory size: ==="
          if exist .next (
            dir .next /s | findstr "File(s)"
          )
          
          echo "=== Removing development files ==="
          if exist .git (
            echo "Removing .git directory..."
            rmdir /s /q .git
          )
          if exist *.log (
            echo "Removing log files..."
            del /q *.log
          )
          if exist .env.local (
            echo "Removing .env.local..."
            del /q .env.local
          )
          if exist .env.development.local (
            echo "Removing .env.development.local..."
            del /q .env.development.local
          )
          if exist .env.test.local (
            echo "Removing .env.test.local..."
            del /q .env.test.local
          )
          if exist .env.production.local (
            echo "Removing .env.production.local..."
            del /q .env.production.local
          )
          if exist tsconfig.tsbuildinfo (
            echo "Removing tsconfig.tsbuildinfo..."
            del /q tsconfig.tsbuildinfo
          )
          if exist node_modules (
            echo "Removing node_modules..."
            rmdir /s /q node_modules
          )
          
          echo "=== AFTER CLEANUP - Final package contents: ==="
          dir
          echo "=== Verifying .next still exists: ==="
          if exist .next (
            echo "SUCCESS: .next directory preserved"
            echo "=== .next directory contents after cleanup: ==="
            dir .next
            echo "=== .next directory size after cleanup: ==="
            dir .next /s | findstr "File(s)"
          ) else (
            echo "ERROR: .next directory was removed during cleanup!"
            echo "=== Current directory contents after cleanup: ==="
            dir
            exit /b 1
          )
          
          echo "=== Verifying Azure config files: ==="
          if exist .deployment (
            echo "SUCCESS: .deployment file preserved"
            echo "=== .deployment contents: ==="
            type .deployment
          ) else (
            echo "ERROR: .deployment file was removed!"
            exit /b 1
          )
          
          echo "=== Installing production dependencies ==="
          echo "=== Running npm ci --only=production ==="
          npm ci --only=production
          echo "=== Production dependencies installed ==="
          
          echo "=== Final deployment package structure: ==="
          echo "=== Root directory: ==="
          dir
          echo "=== Essential files check: ==="
          if exist package.json echo "✓ package.json"
          if exist startup.js echo "✓ startup.js"
          if exist server.cjs echo "✓ server.cjs"
          if exist web.config echo "✓ web.config"
          if exist .deployment echo "✓ .deployment"
          if exist .next echo "✓ .next directory"
          echo "=== .next directory contents: ==="
          dir .next
          echo "=== Package.json contents: ==="
          type package.json

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'TaskFlow'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_352C29692F204B188AA07AED5952DEFE }}
          
      - name: 'Verify deployment structure'
        run: |
          echo "=== Verifying deployed files ==="
          echo "=== Current working directory: $(pwd) ==="
          echo "=== Root directory contents: ==="
          ls -la
          echo "=== Essential files check: ==="
          [ -f "package.json" ] && echo "✓ package.json" || echo "✗ package.json missing"
          [ -f "startup.js" ] && echo "✓ startup.js" || echo "✗ startup.js missing"
          [ -f "server.cjs" ] && echo "✓ server.cjs" || echo "✗ server.cjs missing"
          [ -f "web.config" ] && echo "✓ web.config" || echo "✗ web.config missing"
          [ -f ".deployment" ] && echo "✓ .deployment" || echo "✗ .deployment missing"
          [ -d ".next" ] && echo "✓ .next directory" || echo "✗ .next directory missing"
          
          echo "=== .next directory contents: ==="
          if [ -d ".next" ]; then
            ls -la .next
            echo "=== .next directory size: ==="
            du -sh .next/
          else
            echo "ERROR: .next directory not found in deployment!"
            echo "=== Current directory contents: ==="
            ls -la
            exit 1
          fi
          
          echo "=== Final verification summary: ==="
          echo "✓ All essential files present"
          echo "✓ .next directory exists"
          echo "✓ Ready for Azure deployment"
