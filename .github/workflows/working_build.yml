name: Working Build Workflow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: Install Dependencies
        working-directory: ./frontend
        run: |
          echo "=== Installing dependencies ==="
          npm ci
          echo "=== Dependencies installed ==="
          
      - name: Build Next.js
        working-directory: ./frontend
        run: |
          echo "=== Building Next.js ==="
          npm run build
          echo "=== Build completed ==="
          
      - name: Verify Build Output
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== Verifying build output ==="
          if exist .next (
            echo "✓ .next directory created successfully!"
            dir .next
          ) else (
            echo "✗ .next directory missing"
            echo "Current directory contents:"
            dir
          )
          
      - name: Prepare for Deployment
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== Preparing for deployment ==="
          echo "=== BEFORE cleanup - Current directory contents: ==="
          dir
          echo "=== BEFORE cleanup - .next directory verification: ==="
          if exist .next (
            echo "✓ .next directory found before cleanup"
            dir .next
          ) else (
            echo "✗ .next directory missing before cleanup!"
            exit /b 1
          )
          
          echo "=== Removing development files (preserving .next) ==="
          if exist node_modules rmdir /s /q node_modules
          if exist .git rmdir /s /q .git
          
          echo "=== AFTER cleanup - Verifying .next still exists: ==="
          if exist .next (
            echo "✓ .next directory preserved during cleanup"
            dir .next
          ) else (
            echo "ERROR: .next directory was removed during cleanup!"
            exit /b 1
          )
          
          echo "=== Installing production dependencies ==="
          npm ci --only=production
          echo "=== Production dependencies installed ==="
          
          echo "=== FINAL verification - Deployment package ready: ==="
          dir
          echo "=== Essential files check: ==="
          if exist package.json echo "✓ package.json"
          if exist startup.js echo "✓ startup.js"
          if exist server.cjs echo "✓ server.cjs"
          if exist web.config echo "✓ web.config"
          if exist .deployment echo "✓ .deployment"
          if exist .next echo "✓ .next directory"
          if exist node_modules echo "✓ node_modules (production)"
          
      - name: Create Deployment Package
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== Creating deployment package ==="
          echo "Current directory: %CD%"
          echo "Creating optimized zip archive..."
          echo "Including essential files: .next, package.json, package-lock.json, startup.js, server.cjs, web.config, .deployment"
          echo "Excluding: node_modules (will reinstall on Azure)"
          
          powershell -Command "Compress-Archive -Path .next,package.json,package-lock.json,startup.js,server.cjs,web.config,.deployment,app,components,config,contexts,public -DestinationPath ../deployment-package.zip -Force"
          
          echo "=== Deployment package created ==="
          dir ..\deployment-package.zip
          echo "=== Package size: ==="
          powershell -Command "Get-ChildItem ../deployment-package.zip | Select-Object Name, @{Name='Size(MB)';Expression={[math]::Round($_.Length/1MB,2)}}"
          
      - name: Upload Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: ./deployment-package.zip
          
      - name: Verify Artifact Before Upload
        working-directory: ./frontend
        shell: cmd
        run: |
          echo "=== VERIFYING ARTIFACT BEFORE UPLOAD ==="
          echo "Current directory: %CD%"
          echo "Directory contents:"
          dir
          echo "=== .next directory verification: ==="
          if exist .next (
            echo "✓ .next directory exists before upload"
            dir .next
            echo "=== .next directory size: ==="
            dir .next /s | findstr "File(s)"
          ) else (
            echo "✗ .next directory missing before upload!"
            exit /b 1
          )
          echo "=== ARTIFACT VERIFICATION COMPLETE ==="
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          
      - name: Extract Deployment Package
        run: |
          echo "=== Extracting deployment package ==="
          echo "Current directory: $(pwd)"
          echo "Downloaded files:"
          ls -la
          echo "Extracting deployment-package.zip..."
          unzip -q deployment-package.zip || true
          echo "=== Extraction completed ==="
          echo "Extracted contents:"
          ls -la
          
      - name: Verify Artifact After Download
        run: |
          echo "=== VERIFYING ARTIFACT AFTER DOWNLOAD ==="
          echo "Current directory: $(pwd)"
          echo "Root directory contents:"
          ls -la
          echo "=== .next directory verification: ==="
          if [ -d ".next" ]; then
            echo "✓ .next directory exists after download"
            ls -la .next
            echo "=== .next directory size: ==="
            du -sh .next/ 2>/dev/null || echo "Size calculation had permission issues (non-critical)"
            echo "=== .next directory file count: ==="
            find .next -type f 2>/dev/null | wc -l || echo "File count had permission issues (non-critical)"
            echo "✓ .next directory verification successful"
          else
            echo "✗ .next directory missing after download!"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi
          echo "=== ARTIFACT DOWNLOAD VERIFICATION COMPLETE ==="
          
      - name: Install Production Dependencies
        run: |
          echo "=== Installing production dependencies ==="
          echo "Current directory: $(pwd)"
          echo "Installing production dependencies..."
          npm ci --only=production
          echo "=== Production dependencies installed ==="
          echo "Final directory contents:"
          ls -la
          
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'TaskFlow'
          slot-name: 'Production'
          package: deployment-package.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_352C29692F204B188AA07AED5952DEFE }}
