name: Azure Functions Deployment Workflow

on:
  push:
    branches:
      - main
    paths:
      - "functions/**"
      - ".github/workflows/functions-deploy.yml"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        working-directory: ./functions
        run: dotnet restore

      - name: Build
        working-directory: ./functions
        run: dotnet build --no-restore --configuration Release

      - name: Publish
        working-directory: ./functions
        run: dotnet publish --no-build --configuration Release --output ./publish

      - name: Create Deployment Package
        working-directory: ./functions
        shell: cmd
        run: |
          echo "=== Creating functions deployment package ==="
          echo "Current directory: %CD%"
          echo "Creating zip archive..."

          powershell -Command "Compress-Archive -Path ./publish/* -DestinationPath ./output.zip -Force"

          echo "=== Functions deployment package created ==="
          dir output.zip

      - name: Upload Functions Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: functions-build
          path: ${{ github.workspace }}/functions/output.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      AZURE_FUNCTIONAPP_NAME: 'UserRegistrationFunction'
      AZURE_FUNCTIONAPP_RESOURCE_GROUP: 'barak_m'  # Update this to your actual resource group

    steps:
      - name: Download Functions Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: functions-build

      - name: Verify Deployment Package
        run: |
          echo "=== Verifying deployment package ==="
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "Checking if output.zip exists:"
          if [ -f "./output.zip" ]; then
            echo "✅ output.zip found successfully"
            ls -la output.zip
          else
            echo "❌ output.zip not found!"
            exit 1
          fi

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check Function App Exists
        run: |
          echo "=== Checking if Function App exists ==="
          echo "Function App Name: ${{ env.AZURE_FUNCTIONAPP_NAME }}"
          echo "Resource Group: ${{ env.AZURE_FUNCTIONAPP_RESOURCE_GROUP }}"
          
          # Check if Function App exists
          if az functionapp show --name "${{ env.AZURE_FUNCTIONAPP_NAME }}" --resource-group "${{ env.AZURE_FUNCTIONAPP_RESOURCE_GROUP }}" >/dev/null 2>&1; then
            echo "✅ Function App '${{ env.AZURE_FUNCTIONAPP_NAME }}' exists"
            az functionapp show --name "${{ env.AZURE_FUNCTIONAPP_NAME }}" --resource-group "${{ env.AZURE_FUNCTIONAPP_RESOURCE_GROUP }}" --query "{name:name, resourceGroup:resourceGroup, state:state, kind:kind}" --output table
          else
            echo "❌ Function App '${{ env.AZURE_FUNCTIONAPP_NAME }}' does not exist!"
            echo "Please create the Function App first using one of these methods:"
            echo "1. Azure Portal: Create a new Function App"
            echo "2. Azure CLI: az functionapp create --name '${{ env.AZURE_FUNCTIONAPP_NAME }}' --resource-group '${{ env.AZURE_FUNCTIONAPP_RESOURCE_GROUP }}' --consumption-plan-location 'eastus' --runtime dotnet-isolated --functions-version 4"
            echo "3. Or update the AZURE_FUNCTIONAPP_NAME and AZURE_FUNCTIONAPP_RESOURCE_GROUP in this workflow"
            exit 1
          fi

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './output.zip'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
